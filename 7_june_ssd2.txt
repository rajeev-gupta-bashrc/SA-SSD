Script started on 2024-06-07 16:53:39+05:30 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="79" LINES="23"]
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to GPU
Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 143, in main
    load_params_from_file(model, args.checkpoint)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/tools/train_utils/__init__.py", line 161, in load_params_from_file
    model_state_disk = checkpoint['model_state']
KeyError: 'model_state'
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ ^C
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to GPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 110, in forward
    x = spconv.pytorch.SparseConvTensor(voxel_features, coors, self.sparse_shape, batch_size)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/core.py", line 160, in __init__
    assert features.ndim == 2
AttributeError: 'Tensor' object has no attribute 'ndim'
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to GPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  voxel_features = torch.tensor(voxel_features)
Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 110, in forward
    x = spconv.pytorch.SparseConvTensor(voxel_features, coors, self.sparse_shape, batch_size)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/core.py", line 160, in __init__
    assert features.ndim == 2
AttributeError: 'Tensor' object has no attribute 'ndim'
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to GPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py:104: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  voxel_features = torch.tensor(voxel_features)
/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py:105: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  coors = torch.tensor(coors)
Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 111, in forward
    x = spconv.pytorch.SparseConvTensor(voxel_features, coors, self.sparse_shape, batch_size)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/core.py", line 160, in __init__
    assert features.ndim == 2
AttributeError: 'Tensor' object has no attribute 'ndim'
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ export SPCONV_FX_TRACE_MODE=1
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ export SPCONV_FX_TRACE_MODE=1
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python ' import [K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K - c 'import torch; [K[K[K[K[K[K[Kspconv; print(spconv.constanct[K[Kts.SP[K[KSPCONV_FX_TRACE_MODE)'
True
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python -c 'import spconv; print(spconv.constants.SPCONV_FX_TRACE_MODE)'[A]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ export SPCONV_FX_TRACE_MODE=1[K[A]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to GPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:

Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 112, in forward
    x, middle = self.backbone(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 232, in forward
    out = self.extra_conv(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/modules.py", line 138, in forward
    input = module(input)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 764, in forward
    act_beta=self.act_beta)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 234, in _conv_forward
    weight.view(self.in_channels, self.out_channels))
RuntimeError: cublas runtime error : the GPU program failed to execute at /tmp/pip-req-build-pb3z3zl3/aten/src/THC/THCBlas.cu:259
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ 
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ 
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ [K]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:
Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 112, in forward
    x, middle = self.backbone(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 232, in forward
    out = self.extra_conv(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/modules.py", line 138, in forward
    input = module(input)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 764, in forward
    act_beta=self.act_beta)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 234, in _conv_forward
    weight.view(self.in_channels, self.out_channels))
RuntimeError: cublas runtime error : the GPU program failed to execute at /tmp/pip-req-build-pb3z3zl3/aten/src/THC/THCBlas.cu:259
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ 
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ ~6[K[Kpython test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:^Z
[1]+  Stopped                 python test.py ../configs/car_cfg.py /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/3769, elapsed: 0s, ETA:Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 112, in forward
    x, middle = self.backbone(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 232, in forward
    out = self.extra_conv(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/modules.py", line 138, in forward
    input = module(input)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 764, in forward
    act_beta=self.act_beta)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 234, in _conv_forward
    weight.view(self.in_channels, self.out_channels))
RuntimeError: cublas runtime error : the GPU program failed to execute at /tmp/pip-req-build-pb3z3zl3/aten/src/THC/THCBlas.cu:259
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
[40, 1600, 1408]
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/2, elapsed: 0s, ETA:^F  Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 112, in forward
    x, middle = self.backbone(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 232, in forward
    out = self.extra_conv(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/modules.py", line 138, in forward
    input = module(input)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 764, in forward
    act_beta=self.act_beta)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 234, in _conv_forward
    weight.view(self.in_channels, self.out_channels))
RuntimeError: cublas runtime error : the GPU program failed to execute at /tmp/pip-req-build-pb3z3zl3/aten/src/THC/THCBlas.cu:259
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
building module using _build_mudule
building module using _build_mudule
building module using _build_mudule
[40, 1600, 1408]
building module using _build_mudule
building module using _build_mudule
Evaluate on ['Car']
^Z
[2]+  Stopped                 python test.py ../configs/car_cfg.py /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
[40, 1600, 1408]
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/2, elapsed: 0s, ETA:Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 150, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 112, in forward
    x, middle = self.backbone(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 232, in forward
    out = self.extra_conv(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/modules.py", line 138, in forward
    input = module(input)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 764, in forward
    act_beta=self.act_beta)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 234, in _conv_forward
    weight.view(self.in_channels, self.out_channels))
RuntimeError: cublas runtime error : the GPU program failed to execute at /tmp/pip-req-build-pb3z3zl3/aten/src/THC/THCBlas.cu:259
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
[40, 1600, 1408]
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/2, elapsed: 0s, ETA:yes
Traceback (most recent call last):
  File "test.py", line 162, in <module>
    main()
  File "test.py", line 151, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    results = model(return_loss=False, **data)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 151, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/base.py", line 81, in forward
    return self.forward_test(img, img_meta, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/detectors/single_stage.py", line 117, in forward_test
    (x, conv6) = self.neck(vx, ret['coordinates'], batch_size, is_test=True)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 112, in forward
    x, middle = self.backbone(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/sensyn_ws/src/SA-SSD/mmdet/models/necks/cmn.py", line 232, in forward
    out = self.extra_conv(x)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/modules.py", line 138, in forward
    input = module(input)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 764, in forward
    act_beta=self.act_beta)
  File "/home/rajeev-gupta/miniconda3/envs/p6/lib/python3.7/site-packages/spconv/pytorch/conv.py", line 234, in _conv_forward
    weight.view(self.in_channels, self.out_channels))
RuntimeError: cublas runtime error : the GPU program failed to execute at /tmp/pip-req-build-pb3z3zl3/aten/src/THC/THCBlas.cu:259
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
[40, 1600, 1408]
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.weight: torch.Size([28, 28, 1, 1])
==> Done (loaded 0/148)
[                                                  ] 0/2, elapsed: 0s, ETA:data_loader type <class 'torch.utils.data.dataloader.DataLoader'>
Traceback (most recent call last):
  File "test.py", line 164, in <module>
    main()
  File "test.py", line 153, in main
    outputs = single_test(model, data_loader, args.out)
  File "test.py", line 31, in single_test
    print('data and **data type', type(data), type(**data)); only_once=0 if only_once else None
TypeError: type() takes 1 or 3 arguments
]0;rajeev-gupta@rajeevgupta-Nitro-AN515-58: ~/sensyn_ws/src/SA-SSD/tools[01;32mrajeev-gupta@rajeevgupta-Nitro-AN515-58[00m:[01;34m~/sensyn_ws/src/SA-SSD/tools[00m$ python test.py  ../configs/car_cfg.py  /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth 
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
[40, 1600, 1408]
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
building module using _build_mudule
obj_from_dict(cfg, parrent, default_args)
Evaluate on ['Car']
==> Loading parameters from checkpoint /home/rajeev-gupta/sensyn_ws/src/Ventoy/kitti/KITTI/epoch_50.pth to CPU
Not updated weight module.neck.backbone.conv0.0.weight: torch.Size([16, 3, 3, 3, 4])
Not updated weight module.neck.backbone.conv0.1.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv0.3.weight: torch.Size([16, 3, 3, 3, 16])
Not updated weight module.neck.backbone.conv0.4.weight: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.bias: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_mean: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.running_var: torch.Size([16])
Not updated weight module.neck.backbone.conv0.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down0.0.weight: torch.Size([32, 3, 3, 3, 16])
Not updated weight module.neck.backbone.down0.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.down0.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.0.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.1.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv1.3.weight: torch.Size([32, 3, 3, 3, 32])
Not updated weight module.neck.backbone.conv1.4.weight: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.bias: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_mean: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.running_var: torch.Size([32])
Not updated weight module.neck.backbone.conv1.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down1.0.weight: torch.Size([64, 3, 3, 3, 32])
Not updated weight module.neck.backbone.down1.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down1.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv2.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv2.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv2.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.down2.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.down2.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.down2.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.0.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.3.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.4.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.conv3.6.weight: torch.Size([64, 3, 3, 3, 64])
Not updated weight module.neck.backbone.conv3.7.weight: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.bias: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.running_var: torch.Size([64])
Not updated weight module.neck.backbone.conv3.7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.backbone.extra_conv.0.weight: torch.Size([64, 1, 1, 1, 64])
Not updated weight module.neck.backbone.extra_conv.1.weight: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.bias: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_mean: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.running_var: torch.Size([64])
Not updated weight module.neck.backbone.extra_conv.1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv0.weight: torch.Size([256, 320, 3, 3])
Not updated weight module.neck.fcn.bn0.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn0.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn0.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn0.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv1.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn1.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn1.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn1.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn1.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv2.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn2.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn2.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn2.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn2.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv3.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn3.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn3.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn3.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn3.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv4.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn4.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn4.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn4.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn4.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv5.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn5.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn5.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn5.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn5.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv6.weight: torch.Size([256, 256, 3, 3])
Not updated weight module.neck.fcn.bn6.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn6.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn6.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn6.num_batches_tracked: torch.Size([])
Not updated weight module.neck.fcn.conv7.weight: torch.Size([256, 256, 1, 1])
Not updated weight module.neck.fcn.bn7.weight: torch.Size([256])
Not updated weight module.neck.fcn.bn7.bias: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_mean: torch.Size([256])
Not updated weight module.neck.fcn.bn7.running_var: torch.Size([256])
Not updated weight module.neck.fcn.bn7.num_batches_tracked: torch.Size([])
Not updated weight module.neck.point_fc.weight: torch.Size([64, 160])
Not updated weight module.neck.point_cls.weight: torch.Size([1, 64])
Not updated weight module.neck.point_reg.weight: torch.Size([3, 64])
Not updated weight module.rpn_head.conv_cls.weight: torch.Size([2, 256, 1, 1])
Not updated weight module.rpn_head.conv_cls.bias: torch.Size([2])
Not updated weight module.rpn_head.conv_box.weight: torch.Size([14, 256, 1, 1])
Not updated weight module.rpn_head.conv_box.bias: torch.Size([14])
Not updated weight module.rpn_head.conv_dir_cls.weight: torch.Size([4, 256, 1, 1])
Not updated weight module.rpn_head.conv_dir_cls.bias: torch.Size([4])
Not updated weight module.extra_head.convs.0.weight: torch.Size([28, 256, 3, 3])
Not updated weight module.extra_head.convs.1.weight: torch.Size([28])
Not updated weight module.extra_head.convs.1.bias: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_mean: torch.Size([28])
Not updated weight module.extra_head.convs.1.running_var: torch.Size([28])
Not updated weight module.extra_head.convs.1.num_batches_tracked: torch.Size([])
Not updated weight module.extra_head.convs.3.w